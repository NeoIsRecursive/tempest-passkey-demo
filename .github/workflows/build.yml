name: Build docker image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      BASE_URI: "placeholder"
      COMPOSER_NO_INTERACTION: 1
    permissions:
      contents: read # Required for checkout
      packages: write # Required to push Docker images to GHCR

    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up pnpm
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      # Set up Node.js with pnpm caching
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"

      # Install Node dependencies
      - name: Install frontend dependencies
        run: pnpm install

      # Set up PHP
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.4"
          extensions: mbstring, intl, pdo, pdo_mysql, gmp, pcntl, posix
          coverage: none

      # Cache composer dependencies
      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      # Install Composer
      - name: Install Composer dependencies
        run: composer install --no-interaction --no-dev --prefer-dist --optimize-autoloader

      # Build frontend assets (requires composer to be present)
      - name: Build frontend assets
        run: pnpm run build

      # Log in to GHCR
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build & push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/neoisrecursive/passkeydemo:latest
            ghcr.io/neoisrecursive/passkeydemo:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Deploy with Dokploy
      - name: Dokploy Deployment
        run: |
          curl -X 'POST' \
            "${{ secrets.DOKPLOY_URL }}/api/trpc/application.deploy" \
            -H "accept: application/json" \
            -H "x-api-key: ${{ secrets.DOKPLOY_AUTH_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{
              \"json\": {
                \"applicationId\": \"${{ secrets.DOKPLOY_APPLICATION_ID }}\"
              }
            }"
